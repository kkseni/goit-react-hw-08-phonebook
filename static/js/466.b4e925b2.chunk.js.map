{"version":3,"file":"static/js/466.b4e925b2.chunk.js","mappings":"6NAEaA,EAAgBC,EAAAA,EAAAA,IAAH,6MAObC,EAAQD,EAAAA,EAAAA,GAAH,4DAKSA,EAAAA,EAAAA,GAAH,qC,uICZXE,EAAOF,EAAAA,EAAAA,KAAH,qUAmBJG,GAJQH,EAAAA,EAAAA,MAAH,2CAIGA,EAAAA,EAAAA,MAAH,ibAiBLI,EAASJ,EAAAA,EAAAA,OAAH,upB,4ICuEnB,EA/FoB,WAKlB,OAAuCK,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,UAGhBC,GAASC,EAAAA,EAAAA,MAATD,KAGR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAGMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,OAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,OAEL,EA4BKC,EAAQ,WACZP,EAAQ,IACRE,EAAU,GACX,EAED,OACE,+BACE,UAAC,KAAD,CAAMM,SA5BW,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAU,CAEdZ,KAAAA,EACAE,OAAAA,GAGmBL,EAAKgB,MAAK,SAAAC,GAAE,OAAIF,EAAQZ,OAASc,EAAGd,IAAxB,KAE/Be,EAAAA,EAAAA,IAAU,GAAD,OAAIH,EAAQZ,KAAZ,8BAETL,EAAciB,IACdI,EAAAA,EAAAA,IAAY,GAAD,OAAIJ,EAAQZ,KAAZ,cAGbQ,GACD,EAUG,WAEE,SAAC,KAAD,CACES,KAAK,OACLjB,KAAK,OACLkB,QAAQ,yHACRC,MAAM,yIACNZ,MAAOP,EACPoB,SAAUhB,EAEViB,UAAQ,KAIV,SAAC,KAAD,CACEJ,KAAK,MACLjB,KAAK,SACLkB,QAAQ,yFACRC,MAAM,+FACNZ,MAAOL,EACPkB,SAAUhB,EAEViB,UAAQ,KAEV,SAAC,KAAD,CAAQJ,KAAK,SAASK,SAAU1B,EAAhC,SACGA,EAAY,UAAY,oBAKlC,E,UC1FD,EAZa,WACX,OACE,8BACE,UAAC,KAAD,YACE,SAAC,KAAD,2BACA,SAAC,EAAD,KACA,SAAC,KAAD,QAIP,C","sources":["components/App/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContainerBody = styled.div`\n  /* background: url(http://img6.uploadhouse.com/fileuploads/17737/17737075bdad5cfa9423bb2c3c2beee695c72bb8.jpg); */\n  /* width: 100vw;\n  height: 100%; */\n  text-align: center;\n`;\n\nexport const Title = styled.h1`\n  padding-top: 15px;\n  margin: 0;\n`;\n\nexport const TitleSecond = styled.h2`\n  margin: 0;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  align-items: center;\n  border-radius: 10px;\n  box-shadow: 0 6px 12px -2px rgb(50 50 93 / 25%),\n    0 3px 7px -3px rgb(0 0 0 / 30%);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  margin: 10px auto;\n  overflow: hidden;\n  padding: 30px;\n  text-align: center;\n  width: 350px;\n`;\n\nexport const Label = styled.label`\n  color: #383866;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  margin: 5px;\n  border-top: 0;\n  border-right: 0;\n  border-bottom: 2px solid #333;\n  border-left: 0;\n  :focus {\n    outline: none;\n    border-bottom: none;\n    transition: ease-in-out 0.25s;\n    -webkit-box-shadow: 0px 10px 21px -7px rgba(0, 0, 0, 0.75);\n    -moz-box-shadow: 0px 10px 21px -7px rgba(0, 0, 0, 0.75);\n    box-shadow: 0px 10px 21px -7px rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: 6px 12px;\n  margin-bottom: 0;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.42857143;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: pointer;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  background-image: none;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  color: #fff;\n  background-color: teal;\n  border-color: #46b8da;\n  transition: ease-in-out 0.5s;\n  opacity: 0.6;\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { nanoid } from 'nanoid';\nimport { Form, Input, Button } from './ContactForm.styled';\nimport { showError, showSuccess } from 'utils/Toast/toastMessage';\nimport // useCreateContactMutation,\n// useFetchContactsQuery,\n'redux/Query/contactAPI';\n\nimport {\n  useCreateContactsMutation,\n  useGetContacsQuery,\n} from 'redux/Query/UserApi';\n\nconst ContactForm = () => {\n  // Хук, щоб перекидувало на іншу сторінку\n  // const navigate = useNavigate();\n\n  // РТК Query (створення нового контакту)\n  const [createContact, { isLoading }] = useCreateContactsMutation();\n\n  //  РТК Query (отримання даниз з \"беку\")\n  const { data } = useGetContacsQuery();\n\n  // Значення полів \"Інпуту\"\n  const [name, setName] = useState('');\n  const [number, setNumder] = useState('');\n\n  // зміна значення інпута\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumder(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // створення унікального \"id\"\n  // const nameInputId = nanoid();\n  // const numberInputId = nanoid();\n\n  // Сабмітить форму та відправляє дані для створення нового контакту\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Значення полів \"Інпуту\"\n    const contact = {\n      // id: nanoid(),\n      name,\n      number,\n    };\n    //  Перевірка на ім'я, щоб не було однакових\n    const contactsName = data.some(el => contact.name === el.name);\n    if (contactsName) {\n      showError(`${contact.name} is already in contacts.`);\n    } else {\n      createContact(contact);\n      showSuccess(`${contact.name} is add.`);\n      // navigate('/contacts');\n    }\n    reset();\n  };\n\n  // очищення інпута\n  const reset = () => {\n    setName('');\n    setNumder('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        {/* <Label htmlFor={nameInputId}>Name</Label> */}\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={handleInputChange}\n          // id={nameInputId}\n          required\n        />\n\n        {/* <Label htmlFor={numberInputId}>Number</Label> */}\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={number}\n          onChange={handleInputChange}\n          // id={numberInputId}\n          required\n        />\n        <Button type=\"submit\" disabled={isLoading}>\n          {isLoading ? 'Save...' : 'Add contact'}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default ContactForm;\n\n// todo Old Class\n\n// const INITIAL_STATE = {\n//   name: '',\n//   number: '',\n// };\n\n// class ContactForm extends Component {\n//   state = { ...INITIAL_STATE };\n\n// створення унікального \"id\"\n// nameInputId = nanoid();\n// numberInputId = nanoid();\n\n// // зміна значення інпута\n// handleInputChange = event => {\n//   const { name, value } = event.target;\n//   this.setState({ [name]: value });\n// };\n\n// // Сабмітить форму\n// handleSubmit = event => {\n//   const { name, number } = this.state;\n\n//   event.preventDefault();\n//   const contact = {\n//     id: nanoid(),\n//     name: name,\n//     number: number,\n//   };\n\n//   const { onSubmit } = this.props;\n//   onSubmit && onSubmit(contact);\n\n//   this.reset();\n// };\n\n// // очищення інпута\n// reset = () => {\n//   this.setState({ ...INITIAL_STATE });\n// };\n\n// render() {\n//   const { name, number } = this.state;\n\n//     return (\n//       <>\n//         <div>\n//           <Form onSubmit={this.handleSubmit}>\n//             <Label htmlFor={this.nameInputId}>Name</Label>\n//             <Input\n//               type=\"text\"\n//               name=\"name\"\n//               pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//               title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//               value={name}\n//               onChange={this.handleInputChange}\n//               id={this.nameInputId}\n//               required\n//             />\n\n//             <Label htmlFor={this.numberInputId}>Number</Label>\n//             <Input\n//               type=\"tel\"\n//               name=\"number\"\n//               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//               title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//               value={number}\n//               onChange={this.handleInputChange}\n//               id={this.numberInputId}\n//               required\n//             />\n\n//             <Button>Add contact</Button>\n//           </Form>\n//         </div>\n//       </>\n//     );\n//   }\n// }\n\n// ContactForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n\n// export default ContactForm;\n","import { ContainerBody } from 'components/App/App.styled';\nimport { Title } from 'components/App/App.styled';\nimport ContactForm from 'components/ContactForm';\nimport { ToastContainer } from 'react-toastify';\n\nconst Home = () => {\n  return (\n    <section>\n      <ContainerBody>\n        <Title>New contact</Title>\n        <ContactForm />\n        <ToastContainer />\n      </ContainerBody>\n    </section>\n  );\n};\n\nexport default Home;\n"],"names":["ContainerBody","styled","Title","Form","Input","Button","useCreateContactsMutation","createContact","isLoading","data","useGetContacsQuery","useState","name","setName","number","setNumder","handleInputChange","event","target","value","reset","onSubmit","e","preventDefault","contact","some","el","showError","showSuccess","type","pattern","title","onChange","required","disabled"],"sourceRoot":""}